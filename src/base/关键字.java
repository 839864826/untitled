package base;

/**
 * static关键字的使用
 * 1.static：静态的
 * 2.static：可以修饰  属性，方法，代码块，内部类
 * 3.static：修饰属性   静态变量
 *     3.1属性，按是否使用static修饰，又分为:静态属性Vs非静态属性(实例变量)
 *      实例变量:我们创建了类的多个对象，每个对象都独立的拥有一套类中的非静态属性。
 *              当修改其中-一个对象中的非静态属性时，
 *              不会导致其他对象中同样的属性值的修改。
 *      静态变量:我们创建了类的多个对象，多个对象共享同一一个静态变量。
 *              当通某一个对象修改静态变量时， 会导致
 *              其他对象调用此静态变量时，是修改过了的。
 *      3.2 stati c修饰属性的其他说明:
 *          ①静态变量随着类的加载而加载。可以通过"类.静态变量"的方式进行调用
 *          ②静态变量的加载要早于对象的创建。
 *          ③由于类只会加载一次，则静态变量在内存中也只会存在一份:存在方法区的静态域中。I
 * 4.static：修饰方法：静态方法
 *          ①随着类的加载而加载，可以通过"类.静态方法"的方式进行调用
 *
 * 5. static注意点:
 *          5.1：在静态的方法内，不能使用this关键字、super关键字
 *          5.1：关于静态属性和静态方法的使用，大家都从生命周期的角度去理解。
 *
 * 6.  开发中，如何确定一个属性是否要声明为static的?
 *          >属性是可以被多个对象所共享的，不会随着对象的不同而不同的。
 *     开发中，如何确定一个方法是否要声明为static的?
 *          >操作静态属性的方法，通常设置为static的
 *          >工具类中的方法，习惯上声明为static的。比如: Math、Arrays、Collections
 *
 *
 *
 */
public class 关键字 {
    public static void main(String[] args) {
        Chinese.nation="中国";//静态变量  只创建一个  可以直接  类.属性
        //方法同理

//        Chinese.name="zjl";//可以有很多   无法确定是哪个   所以不可以



    }

}
class Chinese{
    int age;
    String name;
    static String nation;
}

